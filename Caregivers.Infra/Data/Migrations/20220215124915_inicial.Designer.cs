// <auto-generated />
using System;
using Caregivers.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Caregivers.Infra.Data.Migrations
{
    [DbContext(typeof(CaregiversContext))]
    [Migration("20220215124915_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Caregivers.Domains.CidadeDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<Guid>("IdEstado")
                        .HasColumnType("uuid")
                        .HasColumnName("ID_ESTADO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("CIDADE");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            IdEstado = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Belo Horizonte"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            IdEstado = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Nova Lima"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            IdEstado = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Divinópolis"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            IdEstado = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Rio Acima"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            IdEstado = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Ouro Preto"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            IdEstado = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Itabirito"
                        });
                });

            modelBuilder.Entity("Caregivers.Domains.ContatoDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DATA");

                    b.Property<Guid>("IdCuidador")
                        .HasColumnType("uuid")
                        .HasColumnName("ID_CUIDADOR");

                    b.HasKey("Id");

                    b.HasIndex("IdCuidador");

                    b.ToTable("CONTATO");
                });

            modelBuilder.Entity("Caregivers.Domains.CuidadorCidadeDomain", b =>
                {
                    b.Property<Guid>("IdCidade")
                        .HasColumnType("uuid")
                        .HasColumnName("ID_CIDADE");

                    b.Property<Guid>("IdCuidador")
                        .HasColumnType("uuid")
                        .HasColumnName("ID_CUIDADOR");

                    b.HasKey("IdCidade", "IdCuidador");

                    b.HasIndex("IdCuidador");

                    b.ToTable("CUIDADOR_CIDADE");
                });

            modelBuilder.Entity("Caregivers.Domains.CuidadorDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("BIOGRAFIA");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<DateTime?>("DataDesativacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DATA_DESATIVACAO");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("FOTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("NOME");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer")
                        .HasColumnName("SEXO");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("WHATSAPP");

                    b.HasKey("Id");

                    b.ToTable("CUIDADOR");
                });

            modelBuilder.Entity("Caregivers.Domains.EstadoDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<Guid>("IdPais")
                        .HasColumnType("uuid")
                        .HasColumnName("ID_PAIS");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("ESTADO");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            IdPais = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Minas Gerais"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            IdPais = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            IdPais = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "São Paulo"
                        });
                });

            modelBuilder.Entity("Caregivers.Domains.PaisDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<string>("Nome")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("PAIS");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Nome = "Brasil"
                        });
                });

            modelBuilder.Entity("Caregivers.Domains.CidadeDomain", b =>
                {
                    b.HasOne("Caregivers.Domains.EstadoDomain", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Caregivers.Domains.ContatoDomain", b =>
                {
                    b.HasOne("Caregivers.Domains.CuidadorDomain", "Cuidador")
                        .WithMany("Contatos")
                        .HasForeignKey("IdCuidador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuidador");
                });

            modelBuilder.Entity("Caregivers.Domains.CuidadorCidadeDomain", b =>
                {
                    b.HasOne("Caregivers.Domains.CidadeDomain", "Cidade")
                        .WithMany("CuidadoresCidade")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Caregivers.Domains.CuidadorDomain", "Cuidador")
                        .WithMany("CuidadoresCidade")
                        .HasForeignKey("IdCuidador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Cuidador");
                });

            modelBuilder.Entity("Caregivers.Domains.EstadoDomain", b =>
                {
                    b.HasOne("Caregivers.Domains.PaisDomain", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Caregivers.Domains.CidadeDomain", b =>
                {
                    b.Navigation("CuidadoresCidade");
                });

            modelBuilder.Entity("Caregivers.Domains.CuidadorDomain", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("CuidadoresCidade");
                });

            modelBuilder.Entity("Caregivers.Domains.EstadoDomain", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("Caregivers.Domains.PaisDomain", b =>
                {
                    b.Navigation("Estados");
                });
#pragma warning restore 612, 618
        }
    }
}
